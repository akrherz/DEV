"""Generic plotter"""

from pyiem.plot import MapPlot
from pyiem.plot.use_agg import plt

data = """ ABQ |  5.43790849673202614379
 ABR |  4.45205479452054794521
 AFC |  3.23529411764705882353
 AFG |  6.00336700336700336700
 AJK |  3.97757847533632286996
 AKQ |  8.18750000000000000000
 ALY |  6.23255813953488372093
 AMA |  3.85185185185185185185
 APX |  5.69411764705882352941
 ARX | 10.80555555555555555556
 BGM |  5.16923076923076923077
 BIS |  8.68055555555555555556
 BMX |      5.5384615384615385
 BOI |  4.87931034482758620690
 BOU |  5.44078947368421052632
 BOX |  6.36363636363636363636
 BRO |      4.0000000000000000
 BTV |  4.56962025316455696203
 BUF |  7.23809523809523809524
 BYZ |  5.70833333333333333333
 CAE |      6.0714285714285714
 CAR |  7.13533834586466165414
 CHS |      6.2000000000000000
 CLE |  5.60000000000000000000
 CRP |  3.25000000000000000000
 CTP |  4.93670886075949367089
 CYS |  4.98484848484848484848
 DDC |  3.50000000000000000000
 DLH |  6.66666666666666666667
 DMX |  7.98484848484848484848
 DTX |  3.51162790697674418605
 DVN |  6.02083333333333333333
 EAX |  6.20000000000000000000
 EKA |  5.93617021276595744681
 EPZ |  3.71428571428571428571
 EWX |  3.54545454545454545455
 FFC |  5.21739130434782608696
 FGF |  4.95121951219512195122
 FGZ |  6.67441860465116279070
 FSD |  5.60606060606060606061
 FWD |  3.80000000000000000000
 GGW |  4.28787878787878787879
 GID |  4.36585365853658536585
 GJT |  8.40174672489082969432
 GLD |  3.82857142857142857143
 GRB |  6.71014492753623188406
 GRR |  6.46153846153846153846
 GSP |  6.08695652173913043478
 GYX |  6.40322580645161290323
 HFO |  2.12500000000000000000
 HGX |  3.71428571428571428571
 HNX |  6.19008264462809917355
 HUN |  3.68421052631578947368
 ICT |  4.89189189189189189189
 ILM |  5.88888888888888888889
 ILN |  6.62500000000000000000
 ILX |  4.64705882352941176471
 IND |  5.76666666666666666667
 IWX |  6.17647058823529411765
 JAN |  4.27777777777777777778
 JAX |  4.66666666666666666667
 JKL |  5.60975609756097560976
 LBF |  5.27419354838709677419
 LCH |  3.22222222222222222222
 LIX |  3.83333333333333333333
 LKN |  3.78409090909090909091
 LMK |  4.42105263157894736842
 LOT |  5.08000000000000000000
 LOX |  5.28000000000000000000
 LSX |  4.50000000000000000000
 LUB |  3.20000000000000000000
 LWX |  6.56000000000000000000
 LZK |  4.60869565217391304348
 MAF |  3.16129032258064516129
 MEG |  6.88000000000000000000
 MFR |  5.66187050359712230216
 MHX |  4.43750000000000000000
 MKX |  6.63043478260869565217
 MOB |  3.80000000000000000000
 MPX |  6.58947368421052631579
 MQT |  5.17647058823529411765
 MRX |  6.07843137254901960784
 MSO |  4.63793103448275862069
 MTR |      3.0000000000000000
 OAX |  5.00000000000000000000
 OHX |  4.36363636363636363636
 OKX |  5.31666666666666666667
 OTX |  6.53289473684210526316
 OUN |  5.64000000000000000000
 PAH |  4.55555555555555555556
 PBZ |  7.14814814814814814815
 PDT |  5.89285714285714285714
 PHI |  6.15789473684210526316
 PIH |  4.45132743362831858407
 PQR |  4.83695652173913043478
 PSR |  3.80000000000000000000
 PUB |  8.76020408163265306122
 RAH |  5.15384615384615384615
 REV |  6.14893617021276595745
 RIW |  5.93258426966292134831
 RLX |  7.21917808219178082192
 RNK |  7.23076923076923076923
 SEW |  3.54088050314465408805
 SGF |      9.2608695652173913
 SGX |  4.51428571428571428571
 SHV |  4.33333333333333333333
 SJT |  3.64705882352941176471
 SLC |  7.91666666666666666667
 STO |  4.67832167832167832168
 TAE |  2.75000000000000000000
 TFX |  5.11442786069651741294
 TOP |  4.41666666666666666667
 TSA |  6.12500000000000000000
 TWC |  4.58333333333333333333
 UNR |  5.99056603773584905660
 VEF |  5.84057971014492753623"""


def main():
    """Go Main"""
    vals = {}
    for line in data.split("\n"):
        wfo, val = line.strip().split("|")
        wfo = wfo.strip()
        if wfo == "JSJ":
            wfo = "SJU"
        vals[wfo] = float(val)
    bins = list(range(12))
    # bins = np.arange(2011, 2021, 1)
    # bins = [0, 0.1, 0.2, 0.5, 0.75, 1, 2, 5, 10]
    # bins = [1, 5, 10, 25, 50, 75, 100, 300]
    cmap = plt.get_cmap("hot")
    mp = MapPlot(
        sector="nws",
        continentalcolor="white",
        figsize=(12.0, 6.75),
        title=(
            "2010-2020 Average Number of 'CON'tinues WSW Statements "
            "per Winter Storm Warning"
        ),
        subtitle=("based on IEM archives"),
    )
    mp.fill_cwas(
        vals,
        bins=bins,
        lblformat="%.1f",  # , labels=labels,
        cmap=cmap,
        ilabel=True,  # clevlabels=clevlabels,
        units="count",
        extend="neither",
        spacing="proportional",
    )

    mp.postprocess(filename="test.png")


if __name__ == "__main__":
    main()
