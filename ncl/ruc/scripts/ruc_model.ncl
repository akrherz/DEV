load "$WEBWXHOME/ncl_lib/functions.ncl"
load "$WEBWXHOME/ncl_lib/cmap.ncl"
load "$WEBWXHOME/ncl_lib/windbarb.ncl"
load "$WEBWXHOME/ncl_lib/wind_utils.ncl"
load "$WEBWXHOME/ncl_lib/station_plot.ncl"
load "$WEBWXHOME/ncl_lib/meteo_funcs.ncl"
;
;# File ruc_model.ncl -----------------------------------------------------
;# 
;# Purpose: Create plots of wind speed and temperature
;#          on pressure levels from RUCp model input files.
;#
;# Input:   RUCP GRIB file
;#
;# Output:  NCAR Graphics output file (gmeta) containing plots of:
;#             - wind speed
;#             - temperatures
;#
;# Author:  Greg Thompson  22 Apr 2002
;#
;#--------------------------------------------------------------------------
;
begin
;
    ; Create list of pressure levels for plotting.

    nheights=6
    plot_heights_mb=(/200,250,300,500,700,850/)

    ; Create our own colormap using included function.

    cmap=gen_colormap()

    ; Open a workstation, ncgm, or postscript file

    gmetafile = "gmeta_RUCp00"
    wks = xwk("ncgm",gmetafile)
    setvalues wks
        "wkColorMap" : cmap
    end setvalues
 
    ; Ingest GRIB file for RUC data (GRIB filename dynamically changed).

    gribfile = "/old_ftp/root/pub/grib/Ruc_40/2002Apr25/200211518.F00.RUCp.grb"
    print ("Ingesting GRIB file, " + gribfile)
    file1 = addfile (gribfile,"r") 

    ; Set flag for plotting analysis (0) vs. forecast time (1)

    anal_fcst = new(1, logical)
    anal_fcst = 0

    ; Get terrain from external file
    ; This terrain file can be regenerated by gen_topo_file.ncl if needed

    terrainfile = "$WEBWXHOME/ruc/scripts/topo.nc"
    tfile=addfile(terrainfile, "r")
    terr_field=tfile->height

    ; Create date/time plus model cycle strings (dynamically changed).

    date_string = "0 hour forecast valid 1800 UTC Thu 25 Apr 2002"
    level_string = "RUC (18z 25 Apr)"
    raobAnno_string = "RAOB data 12z 25 Apr"

    date_time = create "date_time" textItemClass wks
        "txString" : date_string
        "txFont" : "helvetica"
        "txFontColor" : 1
        "txJust" : "BOTTOMLEFT"
        "txFontHeightF" : 0.018
    end create
    level_anno = create "level_anno" textItemClass wks
        "txString" : level_string
        "txFont" : "helvetica"
        "txFontColor" : 1
        "txJust" : "BOTTOMRIGHT"
        "txFontHeightF" : 0.014
    end create
    raob_anno = create "raob_anno" textItemClass wks
        "txString" : raobAnno_string
        "txFont" : "helvetica"
        "txFontColor" : 1
        "txJust" : "TOPLEFT"
        "txFontHeightF" : 0.013
    end create

    ; Setup Map characteristics based on GRIB ruc40 grid

    mp = gribmap(wks, "ruc40")
    setvalues mp
        "vpXF": 0.01
        "vpYF": 0.99
        "vpWidthF": 0.98
        "vpHeightF": 0.98
        "mpFillOn" : True
        "mpLandFillColor" : 46
        "mpOceanFillColor" : 47
        "mpInlandWaterFillColor" : 47
        "mpGeophysicalLineColor" : 35
        "mpUSStateLineColor" : 35
        "mpNationalLineColor" : 35
    end setvalues

    ; Actual plotted window differs from requested because of map aspect ratio.

    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "mpLambertParallel1F" : lat_tan_p
        "mpLambertMeridianF" : lon_xx_p
    end getvalues

    setvalues date_time
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues raob_anno
        "txPosXF" : vpx
        "txPosYF" : vpy - vph - 0.005
    end setvalues

    ; Loop thru levels to plot and create wind speed, then streamlines, then
    ; temperature contours.

    do i=0, nheights-1

        pLevel   = plot_heights_mb(i)
        print ("Plotting at level: " + pLevel)

        titleStringTemp = "" + pLevel + " mb Heights (dm) / Temperature (:S:o:N:C)"
        titleStringWind = "" + pLevel + " mb Heights (dm) / Isotachs (knots)"
        zResource = "geoz" + pLevel
        z2d      = file1->HGT_236_ISBL({pLevel},:,:)*.1
        t2d      = file1->TMP_236_ISBL({pLevel},:,:)-273.15
        u2d      = file1->U_GRD_236_ISBL({pLevel},:,:)
        v2d      = file1->V_GRD_236_ISBL({pLevel},:,:)
        speed    = sqrt(u2d*u2d + v2d*v2d)*1.94
        wind_vec = vector(wks,MakeData((/u2d, v2d/), "vect4"),"vect4")

        cn_wspd  = contour(wks,MakeData(speed,"speed"),"speed")
        cn_temp  = contour(wks,MakeData(t2d, "tempC"),"tempC")
        cn_temp2 = contour(wks,MakeData(t2d, "tempC"),"tempC")
        cn_hght  = contour(wks,MakeData(z2d, zResource),zResource)

        setvalues cn_hght
            "vpXF" : vpx
            "vpYF" : vpy
            "vpWidthF" : vpw
            "vpHeightF" : vph
            "pmLabelBarDisplayMode" : "NEVER"
        end setvalues
        setvalues cn_temp
            "vpXF" : vpx
            "vpYF" : vpy
            "vpWidthF" : vpw
            "vpHeightF" : vph
            "tiMainString" : titleStringTemp
            "tiMainFontHeightF" : 0.025
            "pmLabelBarDisplayMode" : "NEVER"
        end setvalues
        setvalues cn_temp2
            "vpXF" : vpx
            "vpYF" : vpy
            "vpWidthF" : vpw
            "vpHeightF" : vph
            "tiMainOn" : False
            "cnMinLevelValF" : -62.5
            "cnMaxLevelValF" : 37.5
            "cnLineLabelsOn" : False
            "cnMonoLineThickness" : True
            "cnLineThicknessF" : 1.0
            "cnLineDashPatterns" : (/ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0/)
            "pmLabelBarDisplayMode" : "NEVER"
        end setvalues
        setvalues cn_wspd
            "vpXF" : vpx
            "vpYF" : vpy
            "vpWidthF" : vpw
            "vpHeightF" : vph
            "tiMainString" : titleStringWind
            "tiMainFontHeightF" : 0.025
            "pmLabelBarDisplayMode" : "ALWAYS"
            "pmLabelBarHeightF" : 0.05
            "pmLabelBarWidthF" : vpw*.75
            "pmLabelBarParallelPosF" : 1.0
            "pmLabelBarOrthogonalPosF" : 0.0
            "lbLabelsOn" : True
            "lbLabelFontHeightF" : 0.010
            "lbLabelStride" : 1
            "lbTitleOn" : True
            "lbTitleString" : "(knots)"
            "lbTitlePosition" : "Bottom"
            "lbTitleJust" : "BottomRight"
            "lbTitleFontHeightF" : 0.016
        end setvalues
        if (pLevel .ge. 700) then
            setvalues cn_wspd
                "cnLevelSelectionMode" : "ExplicitLevels"
                "cnLevels"             : (/15.,20.,30.,40.,50.,60.,80.,100./)
                "cnLineLabelsOn"       : False
                "cnLinesOn"            : False
                "cnFillOn"             : True
                "cnFillColors"         : (/-1,37,38,39,40,41,42,43,44/)
            end setvalues
        else
            setvalues cn_wspd
                "cnLevelSelectionMode" : "ExplicitLevels"
                "cnLevels"             : (/30.,40.,50.,60.,80.,100.,125.,150./)
                "cnLineLabelsOn"       : False
                "cnLinesOn"            : False
                "cnFillOn"             : True
                "cnFillColors"         : (/-1,39,40,41,42,43,44,28,2/)
            end setvalues
        end if

        ; Generate terrain contours for terrain above this flight level
        ; Skip this if the the flight level is above the max terrain

        terrain_is_below = True
        height = std_atmos(pLevel*100.0)
        max_terr=max(terr_field)
        if (height .gt. max_terr) then
            terrain_is_below = False
        end if
        if (terrain_is_below .eq. True) then
            cn_terrain=contour(wks,MakeData(terr_field,"null"),"null")
            setvalues cn_terrain
                "vpXF"                  : vpx
                "vpYF"                  : vpy
                "vpWidthF"              : vpw
                "vpHeightF"             : vph
                "cnLevelSelectionMode"  : "ExplicitLevels"
                "cnLevels"              : height
                "cnLinesOn"             : True
                "cnLineLabelsOn"        : False
                "cnFillOn"              : True
                "cnFillColors"          : (/-1,48,-1/)
                "cnMonoFillPattern"     : False
                "cnFillPatterns"        : (/0,4,0/)
                "pmLabelBarDisplayMode" : "NEVER"
            end setvalues
        end if

        ;------------------------------- Winds plots --------------------------#

        print ("      plotting winds")

        setvalues mp
            "mpFillOn" : True
        end setvalues
        draw(mp)

        overlay(cn_wspd, wind_vec)
        draw((/cn_wspd, cn_hght/))

        if (terrain_is_below .eq. True) then
            draw(cn_terrain)
        end if

        setvalues mp
            "mpFillOn" : False
        end setvalues
        draw(mp)

        draw((/date_time,level_anno/))

        frame(wks)
        print ("      .............. done")

        ;------------------------------- Temperature plots --------------------#

        print ("      plotting temperature")

        setvalues mp
            "mpFillOn" : True
        end setvalues
        draw(mp)

        draw((/cn_hght,cn_temp2,cn_temp/))

        if (terrain_is_below .eq. True) then
            draw(cn_terrain)
        end if

        setvalues mp
            "mpFillOn" : False
        end setvalues
        draw(mp)

        draw((/date_time,level_anno/))

        print ("      .................... done")


        if (.not.(anal_fcst)) then

            ;------------------------ Raw radiosonde station plot -------------#
            ; Raw data looks like the following:
            ;-104.86667  39.75000   -23.7 -25.0  10.9   -2.9  5620.0
            ; Lon        Lat        Temp  Dewpt Uwind  Vwind Height

            raobFile = "/home/gthompsn/realtime/upper/pressure/ua" + pLevel + "mb.obs"

            obs_data = asciiread(raobFile, -1, "float")

            dimso = dimsizes(obs_data)

            if (dimso(0) .gt. 0) then

                print ("      PLOTTING RAOB data...")

                print ("          Number of lines in file: " + dimso(0)/7)
                lat = new(dimso(0)/7, float, 999.0)
                lon = new(dimso(0)/7, float, 999.0)
                t   = new(dimso(0)/7, float, 999.0)
                td  = new(dimso(0)/7, float, 999.0)
                u   = new(dimso(0)/7, float, 999.0)
                v   = new(dimso(0)/7, float, 999.0)
                z   = new(dimso(0)/7, float, 999.0)
                xpos = new(dimso(0)/7, float)
                ypos = new(dimso(0)/7, float)
                grid_u = new(dimso(0)/7, float)
                grid_v = new(dimso(0)/7, float)

                lon = obs_data(0::7)
                lat = obs_data(1::7)
                t   = obs_data(2::7)
                td  = obs_data(3::7)
                u   = obs_data(4::7)
                v   = obs_data(5::7)
                z   = obs_data(6::7)

                NhlDataToNDC(mp,lon,lat,xpos,ypos)
                rotate_lc(u, v, lat, lon, grid_u, grid_v, lat_tan_p, lon_xx_p, "RUC40")

                ind_onmap = ind(.not.(xpos.eq.xpos@_FillValue))
                if (.not.all(ismissing(ind_onmap))) then
                    station_plot(mp,xpos(ind_onmap),ypos(ind_onmap),t(ind_onmap),td(ind_onmap),z(ind_onmap),grid_u(ind_onmap),grid_v(ind_onmap))

                end if

                draw (raob_anno)

                delete (dimso)
                delete (ind_onmap)
                delete (obs_data)
                delete (lat)
                delete (lon)
                delete (t)
                delete (td)
                delete (u)
                delete (v)
                delete (z)
                delete (xpos)
                delete (ypos)
                delete (grid_u)
                delete (grid_v)
            else
                print ("      SKIPPING RAOB plotting section!")
            end if

        end if

        frame(wks)


        ;------------------------------- Clean-up -----------------------------#

        delete (cn_wspd)
        delete (cn_temp)
        delete (cn_hght)
        delete (wind_vec)

    end do


    ;------------------------------- 4-panel T / RH plot ----------------------#


    print ("Plotting 4-panel T/RH chart")

    tmp500 = file1->TMP_236_ISBL({500},:,:)
    tmp700 = file1->TMP_236_ISBL({700},:,:)
    tmp850 = file1->TMP_236_ISBL({850},:,:)
    tmp925 = file1->TMP_236_ISBL({925},:,:)

    rh500   = file1->R_H_236_ISBL({500},:,:)*0.01
    rh700   = file1->R_H_236_ISBL({700},:,:)*0.01
    rh850   = file1->R_H_236_ISBL({850},:,:)*0.01
    rh925   = file1->R_H_236_ISBL({925},:,:)*0.01

    rh500   = rh500 > 0.01
    rh500   = rh500 < 0.999
    rh700   = rh700 > 0.01
    rh700   = rh700 < 0.999
    rh850   = rh850 > 0.01
    rh850   = rh850 < 0.999
    rh925   = rh925 > 0.01
    rh925   = rh925 < 0.999

    cn500_T = contour(wks,MakeData(tmp500-273.15,"tempC"),"tempC")
    cn700_T = contour(wks,MakeData(tmp700-273.15,"tempC"),"tempC")
    cn850_T = contour(wks,MakeData(tmp850-273.15,"tempC"),"tempC")
    cn925_T = contour(wks,MakeData(tmp925-273.15,"tempC"),"tempC")

    cn500_R = contour(wks,MakeData(rh500*100.0,"relh"),"relh")
    cn700_R = contour(wks,MakeData(rh700*100.0,"relh"),"relh")
    cn850_R = contour(wks,MakeData(rh850*100.0,"relh"),"relh")
    cn925_R = contour(wks,MakeData(rh925*100.0,"relh"),"relh")

    ;---------------------------- 500 mb  T/RH Plot -(upper-left)--------------#

    titleStringRH = "500 mb Humidty (%) / Temperature (:S:o:N:C)"
    setvalues mp
        "vpXF" : 0.01
        "vpYF" : 0.99
        "vpWidthF" : 0.48
        "vpHeightF" : 0.48
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn500_T
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainOn" : False
        "pmLabelBarDisplayMode" : "NEVER"
        "cnMonoLineThickness" : True
        "cnLineThicknessF" : 2.0
        "cnLineLabelFontHeightF" : 0.009
    end setvalues
    setvalues cn500_R
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringRH
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelsOn" : True
        "lbLabelFontHeightF" : 0.009
        "lbLabelStride" : 1
        "lbTitleOn" : True
        "lbTitleString" : "(percent)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txFontHeightF" : 0.011
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txFontHeightF" : 0.010
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn500_R,cn500_T/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    ;---------------------------- 700 mb  T/RH Plot -(upper-right)-------------#

    titleStringRH = "700 mb Humidty (%) / Temperature (:S:o:N:C)"
    setvalues mp
        "vpXF" : vpx+0.5
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn700_T
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainOn" : False
        "pmLabelBarDisplayMode" : "NEVER"
        "cnMonoLineThickness" : True
        "cnLineThicknessF" : 2.0
        "cnLineLabelFontHeightF" : 0.009
    end setvalues
    setvalues cn700_R
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringRH
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelsOn" : True
        "lbLabelFontHeightF" : 0.009
        "lbLabelStride" : 1
        "lbTitleOn" : True
        "lbTitleString" : "(percent)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn700_R,cn700_T/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    ;---------------------------- 850 mb  T/RH Plot -(lower-left)--------------#

    titleStringRH = "850 mb Humidty (%) / Temperature (:S:o:N:C)"
    setvalues mp
        "vpXF" : vpx-0.5
        "vpYF" : vpy-0.5
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn850_T
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainOn" : False
        "pmLabelBarDisplayMode" : "NEVER"
        "cnMonoLineThickness" : True
        "cnLineThicknessF" : 2.0
        "cnLineLabelFontHeightF" : 0.009
    end setvalues
    setvalues cn850_R
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringRH
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelsOn" : True
        "lbLabelFontHeightF" : 0.009
        "lbLabelStride" : 1
        "lbTitleOn" : True
        "lbTitleString" : "(percent)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn850_R,cn850_T/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    ;---------------------------- 925 mb  T/RH Plot -(lower-right)-------------#

    titleStringRH = "925 mb Humidty (%) / Temperature (:S:o:N:C)"
    setvalues mp
        "vpXF" : vpx+0.5
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn925_T
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainOn" : False
        "pmLabelBarDisplayMode" : "NEVER"
        "cnMonoLineThickness" : True
        "cnLineThicknessF" : 2.0
        "cnLineLabelFontHeightF" : 0.009
    end setvalues
    setvalues cn925_R
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringRH
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelsOn" : True
        "lbLabelFontHeightF" : 0.009
        "lbLabelStride" : 1
        "lbTitleOn" : True
        "lbTitleString" : "(percent)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn925_R,cn925_T/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    frame(wks)


    ;------------------------------- 4-panel Q / VV plot ----------------------#


    r_850   = 0.622*(rh850*e_sub_s(tmp850))/(85000.0-rh850*e_sub_s(tmp850))
    r_925   = 0.622*(rh925*e_sub_s(tmp925))/(92500.0-rh925*e_sub_s(tmp925))
    cn850_r = contour(wks,MakeData(r_850*1000.,"Mixr"),"Mixr")
    cn925_r = contour(wks,MakeData(r_925*1000.,"Mixr"),"Mixr")

    rho = 50000./(287.05*tmp500)
    vv500 = 100.*file1->V_VEL_236_ISBL({500},:,:)*(-1./(rho(:,:)*9.8))
    rho = 70000./(287.05*tmp700)
    vv700 = 100.*file1->V_VEL_236_ISBL({700},:,:)*(-1./(rho(:,:)*9.8))

    cn500_VV  = contour(wks,MakeData(vv500,"Vvel"),"Vvel")
    cn700_VV  = contour(wks,MakeData(vv700,"Vvel"),"Vvel")


    print ("Plotting 4-panel W/Q contour plot")


    ;---------------------------- 500 mb VV  Plot -(upper-left)----------------#

    titleStringVV = "500 mb Vertical Motion (cm/s)"

    setvalues mp
        "vpXF": 0.01
        "vpYF": 0.99
        "vpWidthF": 0.48
        "vpHeightF": 0.48
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn500_VV
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringVV
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelFontHeightF" : 0.009
        "lbLabelsOn" : True
        "lbTitleOn" : True
        "lbTitleString" : "(cm s:S:-1:N:)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txFontHeightF" : 0.011
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txFontHeightF" : 0.010
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn500_VV/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    ;---------------------------- 700 mb VV  Plot -(upper-right)---------------#

    titleStringVV = "700 mb Vertical Motion (cm/s)"

    setvalues mp
        "vpXF": vpx+0.5
        "vpYF": vpy
        "vpWidthF": vpw
        "vpHeightF": vph
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn700_VV
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringVV
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelFontHeightF" : 0.009
        "lbLabelsOn" : True
        "lbTitleOn" : True
        "lbTitleString" : "(cm s:S:-1:N:)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn700_VV/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    ;---------------------------- 850 mb Q Plot -(lower-left)------------------#

    titleStringQ = "850 mb Mixing Ratio (g/kg)"

    setvalues mp
        "vpXF": vpx-0.5
        "vpYF": vpy-0.5
        "vpWidthF": vpw
        "vpHeightF": vph
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn850_r
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringQ
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelFontHeightF" : 0.009
        "lbLabelsOn" : True
        "lbTitleOn" : True
        "lbTitleString" : "(g kg:S:-1:N:)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn850_r/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    ;---------------------------- 925 mb Q Plot -(lower-right)-----------------#

    titleStringQ = "925 mb Mixing Ratio (g/kg)"

    setvalues mp
        "vpXF": vpx+0.5
        "vpYF": vpy
        "vpWidthF": vpw
        "vpHeightF": vph
        "mpFillOn" : True
    end setvalues
    getvalues mp
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
    end getvalues
    setvalues cn925_r
        "vpXF" : vpx
        "vpYF" : vpy
        "vpWidthF" : vpw
        "vpHeightF" : vph
        "tiMainString" : titleStringQ
        "tiMainFontHeightF" : 0.018
        "pmLabelBarHeightF" : 0.05
        "pmLabelBarWidthF" : vpw*.75
        "pmLabelBarParallelPosF" : 1.0
        "pmLabelBarOrthogonalPosF" : 0.0
        "lbLabelFontHeightF" : 0.009
        "lbLabelsOn" : True
        "lbTitleOn" : True
        "lbTitleString" : "(g kg:S:-1:N:)"
        "lbTitlePosition" : "Bottom"
        "lbTitleJust" : "BottomRight"
        "lbTitleFontHeightF" : 0.009
    end setvalues
    setvalues date_time
        "txPosXF" : vpx
        "txPosYF" : vpy + 0.005
    end setvalues
    setvalues level_anno
        "txPosXF" : vpx+vpw
        "txPosYF" : vpy + 0.005
    end setvalues

    draw((/mp,cn925_r/))

    setvalues mp
        "mpFillOn" : False
    end setvalues
    draw(mp)
    draw((/date_time,level_anno/))

    frame(wks)

end
